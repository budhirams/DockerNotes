
# 🐳 MySQL Docker Volume with Data Migration

This project demonstrates how to:
- Create a MySQL container with persistent storage using Docker volumes
- Move MySQL data to a new disk (e.g., /dev/sdb1 mounted at /mnt/data-disk)
- Verify that data remains accessible after migration

---

## 🛠️ Steps Overview

### 1. Create Docker Volume
```bash
docker volume create mysql_data
```

### 2. Start MySQL Container
```bash
docker run -d \
  --name mysql-test \
  -e MYSQL_ROOT_PASSWORD=secret123 \
  -v mysql_data:/var/lib/mysql \
  -p 3306:3306 \
  mysql:8
```

### 3. Insert Sample Data
```bash
docker exec -it mysql-test mysql -uroot -p
```
Inside MySQL:
```sql
CREATE DATABASE testdb;
USE testdb;
CREATE TABLE users (id INT, name VARCHAR(50));
INSERT INTO users VALUES (1, 'Alice'), (2, 'Bob');
SELECT * FROM users;
```

### 4. Format and Mount a New Disk
```bash
sudo fdisk /dev/sdb        # Create partition
sudo mkfs.ext4 /dev/sdb1   # Format it
sudo mkdir -p /mnt/data-disk
sudo mount /dev/sdb1 /mnt/data-disk
echo '/dev/sdb1 /mnt/data-disk ext4 defaults 0 0' | sudo tee -a /etc/fstab
```

### 5. Move Docker Volume to New Disk
```bash
docker stop mysql-test
sudo cp -a /var/lib/docker/volumes/mysql_data/_data /mnt/data-disk/mysql_data
sudo mv /var/lib/docker/volumes/mysql_data/_data /var/lib/docker/volumes/mysql_data/_data.bak
sudo ln -s /mnt/data-disk/mysql_data /var/lib/docker/volumes/mysql_data/_data
docker start mysql-test
```

### 6. Verify Data
```bash
docker exec -it mysql-test mysql -uroot -p
SELECT * FROM testdb.users;
```
✅ You should see the data: `Alice` and `Bob`.

---

## 📁 Volume Info

Run this to verify the volume mount:
```bash
docker volume inspect mysql_data
```

Look for:
```
"Mountpoint": "/var/lib/docker/volumes/mysql_data/_data"
```

---

## 📦 Output

If you see the users in your SQL query after migration, your setup is successful! 🎉

---

**Always use `tee -a` when modifying `/etc/fstab` to avoid overwriting system entries.**

---

Tested on: Kali Linux + Docker + MySQL 8.4
